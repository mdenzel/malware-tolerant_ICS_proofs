#!/bin/bash

#
#  @title:    Self-healing Industrial Control System
#  @authors:  Michael Denzel <md.research@mailbox.org>
#  @date:     2016-07-14
#
#  Shellscript to generate and run ProVerif proofs for selfhealing_proverif.gen
#


#global variables
prefix=./proofs-
files="selfhealing_proverif.gen"

function generate(){
	input="./"$1
	folder=$2
	IFS=' ';
	flags=($3)

	echo "generating ProVerif proofs: \"$folder\""
    mkdir -p $folder
    #	1. none compromised
    cpp ${flags[@]} -P $input -o $folder/1_none_compromised.pv 2>/dev/null
    #----------------------------------------
    # proofs for 1 compromised out of 7 devices
    #	2. PLC1 compromised
    cpp ${flags[@]} -DPLC1_COMPR -P $input -o $folder/2_plc1_compromised.pv 2>/dev/null
    #	3. PLC2 compromised
    cpp ${flags[@]} -DPLC2_COMPR -P $input -o $folder/3_plc2_compromised.pv 2>/dev/null
    #	4. PLC3 compromised
    cpp ${flags[@]} -DPLC3_COMPR -P $input -o $folder/4_plc3_compromised.pv 2>/dev/null
    #	5. 2oo3 compromised
    cpp ${flags[@]} -D_2oo3_COMPR -P $input -o $folder/5_2oo3_compromised.pv 2>/dev/null
    #	6. R1 compromised
    cpp ${flags[@]} -DR1_COMPR -P $input -o $folder/6_r1_compromised.pv 2>/dev/null
    #	7. R2 compromised
    cpp ${flags[@]} -DR2_COMPR -P $input -o $folder/7_r2_compromised.pv 2>/dev/null
    #	8. R3 compromised
    cpp ${flags[@]} -DR3_COMPR -P $input -o $folder/8_r3_compromised.pv 2>/dev/null
    #----------------------------------------
    # proofs for 2 compromised out of 7 devices
    # => we only need to prove: PLC/R, 2 PLC, PLC/2oo3, 2oo3/Recovery, 2 Recovery
    #   9. PLC1 R1 compromised
    cpp ${flags[@]} -DR1_COMPR -DPLC1_COMPR -P $input -o $folder/9_plc1_r1_compromised.pv 2>/dev/null
    #  10. PLC2 R2 compromised
    cpp ${flags[@]} -DR2_COMPR -DPLC2_COMPR -P $input -o $folder/10_plc2_r2_compromised.pv 2>/dev/null
    #  11. PLC3 R3 compromised
    cpp ${flags[@]} -DR3_COMPR -DPLC3_COMPR -P $input -o $folder/11_plc3_r3_compromised.pv 2>/dev/null
    #  12. PLC1 R2 compromised
    cpp ${flags[@]} -DR1_COMPR -DPLC2_COMPR -P $input -o $folder/12_plc1_r2_compromised.pv 2>/dev/null
    #  13. PLC1 and PLC2 compromised
    cpp ${flags[@]} -DPLC1_COMPR -DPLC2_COMPR -P $input -o $folder/13_plc1_plc2_compromised.pv 2>/dev/null
    #  14. PLC1 and 2oo3 compromised
    cpp ${flags[@]} -DPLC1_COMPR -D_2oo3_COMPR -P $input -o $folder/14_plc1_2oo3_compromised.pv 2>/dev/null
    #  15. 2oo3 and R1 compromised
    cpp ${flags[@]} -D_2oo3_COMPR -DR1_COMPR -P $input -o $folder/15_2oo3_r1_compromised.pv 2>/dev/null
    #  16. R1 and R2 compromised
    cpp ${flags[@]} -DR1_COMPR -DR2_COMPR -P $input -o $folder/16_r1_r2_compromised.pv 2>/dev/null
    #----------------------------------------
    # proofs for 3 compromised out of 7 devices
    # => we only need to prove: 3 PLC, 2 PLC/2oo3, PLC/2oo3/Recovery, 2oo3/ 2 Recovery, PLC/2R, 3 Recovery
    #  17. PLC1, PLC2, PLC3 compromised
    cpp ${flags[@]} -DPLC1_COMPR -DPLC2_COMPR -DPLC3_COMPR -P $input -o $folder/17_plc1_plc2_plc3_compromised.pv 2>/dev/null
    #  18. PLC1, PLC2, 2oo3 compromised
    cpp ${flags[@]} -DPLC1_COMPR -DPLC2_COMPR -D_2oo3_COMPR -P $input -o $folder/18_plc1_plc2_2oo3_compromised.pv 2>/dev/null
    #  19. PLC1, 2oo3, R1 compromised
    cpp ${flags[@]} -DPLC1_COMPR -D_2oo3_COMPR -DR1_COMPR -P $input -o $folder/19_plc1_2oo3_r1_compromised.pv 2>/dev/null
    #  20. 2oo3, R1, R2 compromised
    cpp ${flags[@]} -D_2oo3_COMPR -DR1_COMPR -DR2_COMPR -P $input -o $folder/20_2oo3_r1_r2_compromised.pv 2>/dev/null
    #  21. PLC1, R1, R2 compromised
    cpp ${flags[@]} -DPLC1_COMPR -DR1_COMPR -DR2_COMPR -P $input -o $folder/21_plc1_r1_r2_compromised.pv 2>/dev/null
    #  22. PLC1, R2, R3 compromised
    cpp ${flags[@]} -DPLC1_COMPR -DR2_COMPR -DR3_COMPR -P $input -o $folder/22_plc1_r2_r3_compromised.pv 2>/dev/null
    #  23. R1, R2, R3 compromised
    cpp ${flags[@]} -DR1_COMPR -DR2_COMPR -DR3_COMPR -P $input -o $folder/23_r1_r2_r3_compromised.pv 2>/dev/null
    #----------------------------------------
    #  24. all compromised
    cpp ${flags[@]} -DPLC1_COMPR -DPLC2_COMPR -DPLC3_COMPR -D_2oo3_COMPR -DR1_COMPR -DR2_COMPR -DR3_COMPR -P $input -o $folder/24_all_compromised.pv 2>/dev/null
}

for f in $files; do
	IFS=',';
	ops=($f) #make array
	name=${ops[0]} #get first entry
	ops="${ops[@]:1}" #remove first entry
	folder=$prefix$name`echo "$ops" | tr -d ' '`

	#generate files
	generate $name $folder $ops
done
